{% extends 'base.html.twig' %}

{% block title %}Modifier Billets{% endblock %}

{% block body %}
{% include '_admin/_navbar.html.twig' %}

<style>
    .custom-space {
        margin-top: 80px; /* Ajuste cette valeur selon tes besoins */
    }

    .form-container {
        max-width: 600px; /* Largeur maximale pour le conteneur */
        margin: 0 auto; /* Centre le conteneur */
        padding: 20px; /* Espacement intérieur */
        border: 1px solid #ccc; /* Bordure fine */
        border-radius: 5px; /* Arrondit les coins */
        background-color: #f5f5f5; /* Couleur de fond claire */
    }

    .form-label {
        font-weight: bold; /* Texte en gras pour les labels */
        margin-bottom: 5px;
    }

    .form-group {
        margin-bottom: 20px; /* Espace plus grand entre les groupes de champs */
    }

    .form-actions {
        margin-top: 20px; /* Espacement au-dessus des boutons */
        text-align: center;
    }

    .btn-custom {
        margin-right: 10px; /* Espacement entre les boutons */
        margin-top: 10px; /* Espacement vertical */
    }

    .custom-type {
        display: none; /* Caché par défaut */
    }

    /* Classe pour les messages d'erreur */
    .error-message {
        color: red !important; /* Force la couleur rouge */
        margin-top: 5px;
    }

    .ticket-type label {
        margin-right: 15px; /* Espace entre les boutons radio */
    }
</style>

<div class="container custom-space">
    <div class="form-container">
        <h1 class="text-center mb-4">Modifier le Billet</h1>

        {{ form_start(form, {'attr': {'class': 'form'}}) }}

            <div class="form-group">
                <label class="form-label" for="inputField">Type de billet</label>
                {{ form_widget(form.type, {'attr': {'class': 'form-control ticket-type', 'id': 'inputField'}}) }}
                {{ form_errors(form.type, {'attr': {'class': 'error-message'}}) }}
            </div>

            <div class="form-group custom-type">
                <label class="form-label" for="{{ form.customType.vars.id }}">Entrez le type personnalisé :</label>
                {{ form_widget(form.customType, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.customType, {'attr': {'class': 'error-message'}}) }}
            </div>

            <div class="form-group">
                <label class="form-label" for="tarifField">Tarif</label>
                {{ form_widget(form.tarif, {'attr': {'class': 'form-control', 'id': 'tarifField'}}) }}
                {{ form_errors(form.tarif, {'attr': {'class': 'error-message'}}) }}
            </div>

            <div class="form-group">
                <label class="form-label" for="stockField">Quantité en stock</label>
                {{ form_widget(form.stock, {'attr': {'class': 'form-control', 'id': 'stockField'}}) }}
                {{ form_errors(form.stock, {'attr': {'class': 'error-message'}}) }}
            </div>

            <div class="form-actions">
                <a href="{{ path('billet_index') }}" class="btn btn-secondary btn-custom">Retour à la liste</a>
                <button type="submit" class="btn btn-primary">Mettre à jour</button>
            </div>

        {{ form_end(form) }}
    </div>
</div>

{% block javascripts %}
<script>
document.addEventListener("DOMContentLoaded", function() {
    const ticketTypeRadios = document.querySelectorAll('.ticket-type input[type="radio"]');
    const customTypeField = document.querySelector('.custom-type');
    const customTypeInput = document.querySelector('#{{ form.customType.vars.id }}');

    function toggleCustomTypeField() {
        const selectedRadio = document.querySelector('.ticket-type input[type="radio"]:checked');
        if (selectedRadio && selectedRadio.value === "other") {
            customTypeField.style.display = 'block';
            customTypeInput.focus();
        } else {
            customTypeField.style.display = 'none';
        }
    }

    // Sélectionne le bouton radio "Autre" si un type personnalisé est défini
    if (customTypeInput.value !== '') {
        document.querySelector('.ticket-type input[value="other"]').checked = true;
        customTypeField.style.display = 'block';
    }

    // Ajoute l'écouteur d'événement pour changer la sélection
    ticketTypeRadios.forEach(radio => {
        radio.addEventListener('change', toggleCustomTypeField);
    });

    toggleCustomTypeField();
});
</script>
{% endblock %}
{% endblock %}
